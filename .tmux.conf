unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux conf"

unbind C-a

# set -g prefix C-b
set -g prefix2 C-a
bind-key C-a send-prefix

# Increase history
set -g history-limit 5000

# Enable copy mode ( prefix-[ )
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
# Stop yank from jumping to the bottom
unbind -T copy-mode-vi MouseDragEnd1Pane

# Prevent exit when no sessions open
set -s exit-empty off

# Prevent vim mode switching delay (https://superuser.com/a/1809494)
set -s escape-time 5

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
# See https://arcolinux.com/everything-you-need-to-know-about-tmux-status-bar/
set -g status-interval 5

# Set new-window directories to the last dir you were in
bind c new-window -c "#{pane_current_path}"

# Yazi
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Enable mouse mode
set -g mouse on

# Set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# Reorder windows on close
set -g renumber-windows on

# Focus events enabled for terminals that support them
set -g focus-events on

# Increase tmux messages display duration from 750ms to 4s
# set -g display-time 1000

# Fix terminal colors
### Run :checkhealth in nvim to see your current $TERM settings and align it
### Or echo $TERM
set -g default-terminal "xterm-256color"
set-option -sa terminal-features ',xterm-256color:RGB'

# Swap panes
### Press Prefix q to see pane numbers, only can swap between consecutive panes outside unless using marks
bind H swap-pane -U
bind L swap-pane -D

# Other default bindings
# <space> horizontal to vert
# z zoom pane

# More intuitive split windows
bind | split-window -h
bind \\ split-window -h # to avoid needing to press Shift
bind - split-window -v

# Pane and window break/join
# Note: Prefix + ! will break current pane into a new window
# Select a window to move to the current window
bind-key S choose-window 'join-pane -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

#### For Smart Splits
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-Left if -F "#{@pane-is-vim}" 'send-keys C-Left' 'resize-pane -L 3'
bind-key -n C-Down if -F "#{@pane-is-vim}" 'send-keys C-Down' 'resize-pane -D 3'
bind-key -n C-Up if -F "#{@pane-is-vim}" 'send-keys C-Up' 'resize-pane -U 3'
bind-key -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Right' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

# Pane switching
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'
set -g @plugin 'dracula/tmux'
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, tmux-ram-usage, network, network-bandwidth, network-ping, ssh-session, attached-clients, network-vpn, weather, time, mpc, spotify-tui, playerctl, kubernetes-context, synchronize-panes
set -g @dracula-plugins "battery git network ssh-session"

# set -g status-position top

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
